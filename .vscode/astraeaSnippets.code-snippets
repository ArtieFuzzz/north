{
	// Place your astraea workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Astraea Command": {
		"prefix": "AstraeaCommand",
		"body": [
		  "import { AstraeaCommand, AstraeaCommandOptions } from '../../lib/Structures/Command'",
		  "import { Message } from 'discord.js'",
		  "import { ApplyOptions } from '@sapphire/decorators'",
		  "import { Args } from '@sapphire/framework'",
		  "",
		  "@ApplyOptions<AstraeaCommandOptions>({",
		  "	name: 'example',",
		  "	description: 'Solve this'",
		  "})",
		  "export default class example extends AstraeaCommand {",
		  "	public async run (message: Message, args: Args): Promise<Message> {",
		  "	}",
		  "}",
		  ""
		],
		"description": "Astraea Command"
	  },
	  "Astraea Listener": {
		"prefix": "AstraeaListener",
		"body": [
		  "import { AstraeaCommand, AstraeaCommandOptions } from '../../lib/Structures/Command'",
		  "import { Message } from 'discord.js'",
		  "import { ApplyOptions } from '@sapphire/decorators'",
		  "import { Args } from '@sapphire/framework'",
		  "",
		  "@ApplyOptions<AstraeaCommandOptions>({",
		  "	name: 'example',",
		  "	description: 'Solve this'",
		  "})",
		  "export default class example extends AstraeaCommand {",
		  "	public async run (message: Message, args: Args): Promise<Message> {",
		  "	}",
		  "}",
		  ""
		],
		"description": "Astraea Listener"
	  },
	  "Astraea RedditCommand": {
		"prefix": "AstraeaRedditCommand",
		"body": [
		  "import { AstraeaCommand, AstraeaCommandOptions } from '../../lib/Structures/Command'",
		  "import { Message, MessageEmbed } from 'discord.js'",
		  "import { ApplyOptions } from '@sapphire/decorators'",
		  "import { RedditImage } from '@aero/ksoft'",
		  "",
		  "@ApplyOptions<AstraeaCommandOptions>({",
		  "	name: 'solve',",
		  "	description: 'solve this'",
		  "})",
		  "export default class Example extends AstraeaCommand {",
		  "	public async run (message: Message): Promise<Message> {",
		  "		const { post, url }: RedditImage = await this.container.client.ksoft.images.reddit('SOLVE ME', { removeNSFW: true, span: 'day' })",
		  "		const embed = new MessageEmbed()",
		  "			.setTitle(post.title)",
		  "			.setFooter(`Powered by api.ksoft.si ${post.author} | Upvotes: ${post.upvotes} | Downvotes ${post.downvotes}`)",
		  "			.setURL(post.link)",
		  "			.setTimestamp()",
		  "			.setImage(url)",
		  "			.setColor('RANDOM')",
		  "		return await message.channel.send(embed)",
		  "	}",
		  "}",
		  ""
		],
		"description": "Astraea RedditCommand"
	  }
}